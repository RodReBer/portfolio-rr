---
import { isValidEmail } from "../services/contactValidate";
import { Resend } from "resend";

const resend = new Resend(import.meta.env.RESEND_API_KEY);
const MIN_SUBMISSION_INTERVAL = 60;

const errors = { Name: "", Email: "", Subject: "", Message: "", general: "" };
let formData = { Name: "", Email: "", Subject: "", Message: "" };
let successMessage = "";

if (Astro.request.method === "POST") {
  Object.keys(errors).forEach((key) => (errors[key] = ""));

  try {
    const data = await Astro.request.formData();

    // Protecciones anti-spam
    const honey = data.get("website")?.toString().trim() ?? "";
    if (honey.length > 0) return;

    const timestamp = parseInt(data.get("timestamp")?.toString() ?? "0");
    if (Date.now() - timestamp < 3000) {
      errors.general = "Form submission too fast";
      return;
    }

    const mathAnswer = data.get("math_question")?.toString().trim() ?? "";
    if (mathAnswer !== "8") {
      errors.general = "Please answer the math question correctly";
      return;
    }

    const lastSubmission = Astro.cookies.get("last_submission")?.value;
    if (lastSubmission && Date.now() - parseInt(lastSubmission) < MIN_SUBMISSION_INTERVAL * 1000) {
      errors.general = `Please wait ${MIN_SUBMISSION_INTERVAL} seconds before submitting again`;
      return;
    }

    formData = {
      Name: data.get("Name")?.toString().trim() ?? "",
      Email: data.get("Email")?.toString().trim() ?? "",
      Subject: data.get("Subject")?.toString().trim() ?? "",
      Message: data.get("Message")?.toString().trim() ?? "",
    };

    if (formData.Name.length < 2) errors.Name = "Name is too short";
    if (!isValidEmail(formData.Email)) errors.Email = "Invalid email";
    if (formData.Subject.length < 3) errors.Subject = "Subject is too short";
    if (formData.Message.length < 10) errors.Message = "Message is too short";

    if (!Object.values(errors).some(Boolean)) {
      try {
        await resend.emails.send({
          from: "onboarding@resend.dev",
          to: "rodrigorey2005@gmail.com",
          subject: `New Contact: ${formData.Subject}`,
          html: `
            <h2>New Contact Form Submission</h2>
            <p><strong>Name:</strong> ${formData.Name}</p>
            <p><strong>Email:</strong> ${formData.Email}</p>
            <p><strong>Subject:</strong> ${formData.Subject}</p>
            <p><strong>Message:</strong></p>
            <p>${formData.Message}</p>
          `
        });

        await resend.emails.send({
          from: "no-reply@rodrigorey.info",
          to: formData.Email,
          subject: "We received your message",
          html: `
            <p>Hi ${formData.Name},</p>
            <p>Thank you for contacting us. We have received your message and will respond soon.</p>
            <p>Best regards,</p>
            <p>Your Team</p>
          `
        });

        successMessage = "Your message has been sent successfully!";
        formData = { Name: "", Email: "", Subject: "", Message: "" };
        
        Astro.cookies.set("last_submission", Date.now().toString(), {
          path: "/",
          maxAge: MIN_SUBMISSION_INTERVAL,
          httpOnly: true
        });

      } catch (emailError) {
        console.error("Email sending error:", emailError);
        errors.general = "Could not send message. Please try again later.";
      }
    }
  } catch (error) {
    console.error("Form processing error:", error);
    errors.general = "An unexpected error occurred. Please try again.";
  }
}
---

<!-- FORMULARIO CON ESTILOS ORIGINALES -->
<form class="max-w-md mx-auto" name="form" method="POST">
  <!-- Campos ocultos anti-spam -->
  <input 
    type="text" 
    name="website" 
    style="position: absolute; left: -9999px;" 
    tabindex="-1" 
    autocomplete="off"
  />
  <input type="hidden" name="timestamp" value={new Date().getTime()} />

  <!-- Pregunta matemática con estilos originales -->
  <div class="relative z-0 w-full mb-5 group">
    <input
      type="text"
      name="math_question"
      id="math_question"
      class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-orange-500 focus:outline-none focus:ring-0 focus:border-violet-600 peer"
      placeholder=" "
      required
    />
    <label
      for="math_question"
      class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:left-auto peer-focus:text-violet-600 peer-focus:dark:text-orange-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
    >
      What is 5 + 3? (Anti-spam)
    </label>
  </div>

  <!-- Mensaje de éxito -->
  {successMessage && (
    <div class="mb-4 p-4 bg-green-100 text-green-700 rounded-md">
      {successMessage}
    </div>
  )}

  <!-- Campo Nombre -->
  <div class="relative z-0 w-full mb-5 group">
    <input
      type="text"
      name="Name"
      id="Name"
      value={formData.Name}
      class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-orange-500 focus:outline-none focus:ring-0 focus:border-violet-600 peer"
      placeholder=" "
      required
      minlength="2"
    />
    <label
      for="Name"
      class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:left-auto peer-focus:text-violet-600 peer-focus:dark:text-orange-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
    >
      Name
    </label>
    {errors.Name && <p class="text-red-500 text-xs mt-1">{errors.Name}</p>}
  </div>

  <!-- Campo Email -->
  <div class="relative z-0 w-full mb-5 group">
    <input
      type="email"
      name="Email"
      id="Email"
      value={formData.Email}
      class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-orange-500 focus:outline-none focus:ring-0 focus:border-violet-600 peer"
      placeholder=" "
      required
    />
    <label
      for="Email"
      class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:left-auto peer-focus:text-violet-600 peer-focus:dark:text-orange-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
    >
      Email
    </label>
    {errors.Email && <p class="text-red-500 text-xs mt-1">{errors.Email}</p>}
  </div>

  <!-- Campo Asunto -->
  <div class="relative z-0 w-full mb-5 group">
    <input
      type="text"
      name="Subject"
      id="Subject"
      value={formData.Subject}
      class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-orange-500 focus:outline-none focus:ring-0 focus:border-violet-600 peer"
      placeholder=" "
      required
      minlength="3"
    />
    <label
      for="Subject"
      class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:left-auto peer-focus:text-violet-600 peer-focus:dark:text-orange-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
    >
      Subject
    </label>
    {errors.Subject && <p class="text-red-500 text-xs mt-1">{errors.Subject}</p>}
  </div>

  <!-- Campo Mensaje -->
  <div class="relative z-0 w-full mb-5 group">
    <textarea
      name="Message"
      id="Message"
      class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-orange-500 focus:outline-none focus:ring-0 focus:border-violet-600 peer min-h-20"
      placeholder=" "
      required
      minlength="10"
    >{formData.Message}</textarea>
    <label
      for="Message"
      class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:left-auto peer-focus:text-violet-600 peer-focus:dark:text-orange-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
    >
      Message
    </label>
    {errors.Message && <p class="text-red-500 text-xs mt-1">{errors.Message}</p>}
  </div>

  <!-- Botón de envío -->
  <button
    type="submit"
    class="text-white bg-violet-700 hover:bg-violet-800 focus:ring-4 focus:outline-none focus:ring-violet-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-orange-600 dark:hover:bg-orange-700 dark:focus:ring-orange-800"
  >
    Send message
  </button>

  <!-- Error general -->
  {errors.general && <p class="text-red-500 text-sm mt-4">{errors.general}</p>}
</form>